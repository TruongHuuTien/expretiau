{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/user.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {User} from './user';\n\nexport class App {\n  users: any;\n\n  constructor() {\n    this.users = [{\n      name: {\n        first: \"Toto\",\n        last: \"Toto\"\n      }\n    }]\n    User.fetchUsers().then((users) => {\n      this.users = users;\n    });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\nimport {HttpClient} from 'aurelia-fetch-client';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HttpClient} from 'aurelia-fetch-client';\n\nfunction createUrl(parameters) {\n  var url: string = '';\n  var paramsUrl = [];\n\n  url += parameters.url;\n  if (parameters.fields !== undefined || parameters.quantity !== undefined) {\n    url += \"?\";\n  }\n  if (parameters.fields !== undefined) {\n    paramsUrl.push('inc=' + parameters.fields.join(\",\"));\n  }\n  if (parameters.quantity !== undefined) {\n    paramsUrl.push('results=' + parameters.quantity);\n  }\n  url += paramsUrl.join(\"&\");\n\n  return url;\n}\n\nexport class User {\n  public name: {\n    first: string,\n    last: string\n  }\n  constructor(data) {\n    this.name = {\n      first: data.name.first,\n      last: data.name.last\n    }\n  }\n\n static fetchUsers() {\n   const requestParameters = {\n     url :'https://randomuser.me/api/',\n     fields : ['name'],\n     quantity : 10\n   }\n\n   let promise = new Promise((resolve, reject) => {\n     let httpClient = new HttpClient();\n     httpClient.fetch(createUrl(requestParameters))\n       .then(response => response.json())\n       .then(data => {\n         var users = [];\n         for (let res of data.results) {\n           let user = new User(res);\n           users.push(user);\n         }\n         resolve(users);\n       });\n   });\n\n   return promise;\n }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}